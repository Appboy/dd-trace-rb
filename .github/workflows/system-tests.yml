name: System Tests

on:
  push:
    branches:
      - "**"
  workflow_dispatch: {}
  schedule:
    - cron:  '00 04 * * 2-6'

env:
  REGISTRY: ghcr.io

jobs:
  system-tests:
    strategy:
      fail-fast: false
      matrix:
        library:
          - ruby
        weblog-variant:
          - rack
          - sinatra14
          - sinatra20
          - sinatra21
          - rails32
          - rails40
          - rails41
          - rails42
          - rails50
          - rails51
          - rails52
          - rails60
          - rails61
          - rails70
        scenario:
          - DEFAULT
          - APPSEC_CUSTOM_RULES
          - REMOTE_CONFIG_MOCKED_BACKEND_ASM_DD
          - REMOTE_CONFIG_MOCKED_BACKEND_ASM_FEATURES
          - REMOTE_CONFIG_MOCKED_BACKEND_ASM_FEATURES_NOCACHE
          - REMOTE_CONFIG_MOCKED_BACKEND_ASM_DD_NOCACHE
          - APPSEC_MISSING_RULES
          - APPSEC_CORRUPTED_RULES
          - APPSEC_DISABLED
          - APPSEC_LOW_WAF_TIMEOUT
          - APPSEC_CUSTOM_OBFUSCATION
          - APPSEC_RATE_LIMITER
          - APPSEC_IP_BLOCKING
          - APPSEC_REQUEST_BLOCKING
          - SAMPLING
          - PROFILING
    runs-on: ubuntu-latest
    name: System Tests (${{ matrix.scenario }}, ${{ matrix.weblog-variant }})
    steps:
      - name: Setup python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: 'DataDog/system-tests'

      - name: Checkout dd-trace-rb
        uses: actions/checkout@v3
        with:
          path: 'binaries/dd-trace-rb'

      - name: Log in to the Container registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Build
        run: ./build.sh --library ${{ matrix.library }} --weblog-variant ${{ matrix.weblog-variant }}

      - name: Run default scenario
        run: ./run.sh ${{ matrix.scenario }}
        env:
          DD_API_KEY: ${{ secrets.DD_APPSEC_SYSTEM_TESTS_API_KEY }}

      - name: Archive logs
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: system-tests-${{ matrix.library }}-${{ matrix.scenario }}-${{ matrix.weblog-variant }}-logs-${{ github.run_id }}-${{ github.sha }}
          path: logs*

      - name: Print fancy log report
        if: ${{ always() }}
        run: python utils/scripts/markdown_logs.py >> $GITHUB_STEP_SUMMARY
