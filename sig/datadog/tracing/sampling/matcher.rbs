module Datadog
  module Tracing
    module Sampling
      class Matcher
        def match?: (untyped trace) -> untyped
      end
      class SimpleMatcher < Matcher
        MATCH_ALL: untyped

        attr_reader name: untyped

        attr_reader service: untyped
        def initialize: (?name: untyped, ?service: untyped) -> void

        def match?: (untyped trace) -> untyped
      end
      class ProcMatcher < Matcher
        attr_reader block: untyped
        def initialize: () ?{ () -> untyped } -> void

        def match?: (untyped trace) -> untyped
      end
    end
  end
end
