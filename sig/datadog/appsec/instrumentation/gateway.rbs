module Datadog
  module AppSec
    module Instrumentation
      class Gateway
        class Middleware
          attr_reader key: ::Symbol
          attr_reader block: ::Proc

          def call: (*untyped args, **untyped kwargs) -> untyped
        end

        type data = untyped

        def initialize: () -> void

        def push: (::String event_name, data data) -> bool

        def watch: (::String event_name) { (data data) -> void } -> void
      end

      def self.gateway: () -> Gateway
    end
  end
end
