module Datadog
  module OpenTracer
    class ThreadLocalScopeManager < ScopeManager
      def initialize: (*untyped args) ?{ () -> untyped } -> void
      def activate: (untyped span, ?finish_on_close: bool) -> untyped
      def active: () -> untyped
      UNIQUE_INSTANCE_MUTEX: untyped

      UNIQUE_INSTANCE_GENERATOR: untyped

      def self.next_instance_id: () -> untyped

      private

      def set_scope: (untyped scope) -> untyped
    end
  end
end
