module Datadog
  module OpenTracer
    class Tracer < ::OpenTracing::Tracer
      attr_reader datadog_tracer: untyped
      def initialize: (**untyped options) -> void
      def scope_manager: () -> untyped
      def start_active_span: (untyped operation_name, ?child_of: untyped?, ?references: untyped?, ?start_time: untyped, ?tags: untyped?, ?ignore_active_scope: bool, ?finish_on_close: bool) { (untyped) -> untyped } -> untyped
      def start_span: (untyped operation_name, ?child_of: untyped?, ?references: untyped?, ?start_time: untyped, ?tags: untyped?, ?ignore_active_scope: bool) -> untyped
      def inject: (untyped span_context, untyped format, untyped carrier) -> untyped
      def extract: (untyped format, untyped carrier) -> untyped

      private

      def inherited_span_context: (untyped parent, ?ignore_active_scope: bool) -> untyped
    end
  end
end
