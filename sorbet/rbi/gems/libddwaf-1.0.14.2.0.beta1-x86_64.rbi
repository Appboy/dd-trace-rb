# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/libddwaf-1.0.14.2.0.beta1-x86_64/all/libddwaf-1.0.14.2.0.beta1-x86_64.rbi
#
# libddwaf-1.0.14.2.0.beta1-x86_64-darwin

module Datadog
end
module Datadog::AppSec
end
module Datadog::AppSec::WAF
  def self.logger=(logger); end
  def self.object_to_ruby(obj); end
  def self.ruby_to_object(val); end
  def self.version; end
end
module Datadog::AppSec::WAF::VERSION
end
module Datadog::AppSec::WAF::LibDDWAF
  def ddwaf_context_destroy(*arg0); end
  def ddwaf_context_init(*arg0); end
  def ddwaf_destroy(*arg0); end
  def ddwaf_get_version(*arg0); end
  def ddwaf_init(*arg0); end
  def ddwaf_object_array(*arg0); end
  def ddwaf_object_array_add(*arg0); end
  def ddwaf_object_free(*arg0); end
  def ddwaf_object_invalid(*arg0); end
  def ddwaf_object_map(*arg0); end
  def ddwaf_object_map_add(*arg0); end
  def ddwaf_object_map_addl(*arg0); end
  def ddwaf_object_map_addl_nc(*arg0); end
  def ddwaf_object_signed(*arg0); end
  def ddwaf_object_signed_force(*arg0); end
  def ddwaf_object_string(*arg0); end
  def ddwaf_object_stringl(*arg0); end
  def ddwaf_object_stringl_nc(*arg0); end
  def ddwaf_object_unsigned(*arg0); end
  def ddwaf_object_unsigned_force(*arg0); end
  def ddwaf_required_addresses(*arg0); end
  def ddwaf_result_free(*arg0); end
  def ddwaf_run(*arg0); end
  def ddwaf_set_log_cb(*arg0); end
  def self.ddwaf_context_destroy(*arg0); end
  def self.ddwaf_context_init(*arg0); end
  def self.ddwaf_destroy(*arg0); end
  def self.ddwaf_get_version(*arg0); end
  def self.ddwaf_init(*arg0); end
  def self.ddwaf_object_array(*arg0); end
  def self.ddwaf_object_array_add(*arg0); end
  def self.ddwaf_object_free(*arg0); end
  def self.ddwaf_object_invalid(*arg0); end
  def self.ddwaf_object_map(*arg0); end
  def self.ddwaf_object_map_add(*arg0); end
  def self.ddwaf_object_map_addl(*arg0); end
  def self.ddwaf_object_map_addl_nc(*arg0); end
  def self.ddwaf_object_signed(*arg0); end
  def self.ddwaf_object_signed_force(*arg0); end
  def self.ddwaf_object_string(*arg0); end
  def self.ddwaf_object_stringl(*arg0); end
  def self.ddwaf_object_stringl_nc(*arg0); end
  def self.ddwaf_object_unsigned(*arg0); end
  def self.ddwaf_object_unsigned_force(*arg0); end
  def self.ddwaf_required_addresses(*arg0); end
  def self.ddwaf_result_free(*arg0); end
  def self.ddwaf_run(*arg0); end
  def self.ddwaf_set_log_cb(*arg0); end
  def self.local_cpu; end
  def self.local_os; end
  def self.shared_lib_extname; end
  def self.shared_lib_path; end
  extend FFI::Library
end
class Datadog::AppSec::WAF::LibDDWAF::Error < StandardError
end
class Datadog::AppSec::WAF::LibDDWAF::Version < FFI::Struct
end
class Datadog::AppSec::WAF::LibDDWAF::ObjectValueUnion < FFI::Union
end
class Datadog::AppSec::WAF::LibDDWAF::Object < FFI::Struct
end
class Datadog::AppSec::WAF::LibDDWAF::Config < FFI::Struct
end
class Datadog::AppSec::WAF::LibDDWAF::Result < FFI::Struct
end
class Datadog::AppSec::WAF::Handle
  def handle_obj; end
  def initialize(rule, config = nil); end
  def self.finalizer(handle_obj); end
end
class Datadog::AppSec::WAF::Result < Struct
  def action; end
  def action=(_); end
  def data; end
  def data=(_); end
  def perf_data; end
  def perf_data=(_); end
  def perf_total_runtime; end
  def perf_total_runtime=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Datadog::AppSec::WAF::Context
  def context_obj; end
  def initialize(handle); end
  def run(input, timeout = nil); end
  def self.finalizer(context_obj, input_objs); end
end
